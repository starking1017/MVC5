@model MVC5.Models.Device

@{
  ViewBag.Title = "Edit";
  Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>编辑设备</h2>


@using (Html.BeginForm())
{
  @Html.AntiForgeryToken()

  <div class="form-horizontal">
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.ID)

    @*    <div class="form-group">*@
    @*      @Html.LabelFor(model => model.DeviceId, htmlAttributes: new { @class = "control-label col-md-2" })*@
    @*      <div class="col-md-10">*@
    @*        @Html.EditorFor(model => model.DeviceId, new { htmlAttributes = new { @class = "form-control" } })*@
    @*        @Html.ValidationMessageFor(model => model.DeviceId, "", new { @class = "text-danger" })*@
    @*      </div>*@
    @*    </div>*@

    <div class="form-group">
      @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Type, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Type, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Type, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Factory, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Factory, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Factory, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Model, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Model, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Model, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Amount, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Amount, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.MaintainFrequency, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.MaintainFrequency, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MaintainFrequency, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.ReplaceFee, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.ReplaceFee, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.ReplaceFee, "", new { @class = "text-danger" })
      </div>
    </div>

    <div class="form-group">
      @Html.LabelFor(model => model.MaxUsedYear, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
        @Html.EditorFor(model => model.MaxUsedYear, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.MaxUsedYear, "", new { @class = "text-danger" })
      </div>
    </div>
    
    <div class="form-group">
      @Html.LabelFor(model => model.DeviceList, htmlAttributes: new { @class = "control-label col-md-2" })
      <div class="col-md-10">
          @Html.DisplayFor(model => model.DeviceList, new { htmlAttributes = new { @class = "form-control" } })
      </div>
    </div>
  </div>

  <div class="row">
    <div class="col-md-8">
      <div class="demo-section k-content">
        @*      @(Html.Kendo().Upload()*@
        @*        .Name("files")*@
        @*        .Messages(m => m.Select("上传设备ID - 安装年份列表..."))*@
        @*        .Multiple(false)*@
        @*        .HtmlAttributes(new { accept = ".xls, xlsx" })*@
        @*        .HtmlAttributes(new { accept = ".csv" })*@
        @*        .HtmlAttributes(new { accept = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" })*@
        @*        .Async(a => a*@
        @*        .Save("Save", "Devices",new { Deviceid = Model.ID })*@
        @*        .Remove("Remove", "Devices")*@
        @*        .SaveField("files"))*@
        @*      )*@
      
        @(Html.Kendo().Upload()
            .Name("attachments")
            .HtmlAttributes(new { accept = ".xls, xlsx" })
            .HtmlAttributes(new { accept = ".csv" })
            .HtmlAttributes(new { accept = "application/vnd.openxmlformats-officedocument.spreadsheetml.sheet" })
            .Messages(m => m.Select("上传设备ID - 安装年份列表..."))
            .Multiple(false)
            )
      </div>
      <div class="form-group">
      <p style="padding-top: 1em; text-align: right;">
      <input type="submit" value="储存" class="btn btn-primary minwidth100" />
    </p>
    </div>
    </div>
  </div>
}

<p></p>
<div>
  @Html.ActionLink("返回列表", "Index")
</div>

@section Scripts {
  @Scripts.Render("~/bundles/jqueryval")
}

